- test build with c++17 again now that dependencies are properly made
- THEN change to use c++20
- added assets from bamboo release file for testing - must make it seperate download in the future
- must convert glfw code to sdl2
- must figure out how to create editor executable seperate from user developer code

- The Test executable technically works, but it seg faults right away
- first guess is environment differences
- rttr can only be compiled with gcc, but when done statically, it cannot just be linked with a clang project


- Keep Local dependencies:
- imgui
- tinygltf


sudo docker build -t yurrgoht/testapp:1.0 .
cmake -G Ninja -S . -B build
cmake --build build --config Release


cd build/source
./Test



# Runtime library search paths (optional for dynamically loaded libraries, but not critical for static executables)
if(NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/libs)
    file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/libs)

    # Copy dependency libraries (optional)
    add_custom_command(TARGET ${TARGET_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E echo "Copying shared libraries..."
        COMMAND ldd ${CMAKE_CURRENT_BINARY_DIR}/${TARGET_NAME} | cut -d' ' -f3 | xargs -I {} cp -v {} ${CMAKE_CURRENT_BINARY_DIR}/libs/
    )
endif()


# spdlog dependency - these 2 lines will always cause a problem for some reason that I cannot figure out
#RUN sed -i 's/#    include <spdlog\/fmt\/bundled\/core.h>/#    include <fmt\/core.h>/' /usr/include/spdlog/fmt/fmt.h && \
#    sed -i 's/#    include <spdlog\/fmt\/bundled\/format.h>/#    include <fmt\/format.h>/' /usr/include/spdlog/fmt/fmt.h




    
# JoltPhysics dependency
RUN wget https://github.com/jrouwe/JoltPhysics/archive/refs/tags/v5.2.0.tar.gz && \
    tar -xzvf v5.2.0.tar.gz && \
    cd JoltPhysics-5.2.0/Build && \ 
    ./cmake_linux_clang_gcc.sh Debug clang++ -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=OFF -DJPH_PROFILE_ENABLED=ON -DJPH_DEBUG_RENDERER=ON \
    -DTARGET_HELLO_WORLD=OFF -DTARGET_PERFORMANCE_TEST=OFF -DTARGET_SAMPLES=OFF -DTARGET_UNIT_TESTS=OFF -DTARGET_VIEWER=OFF \
    -DDOUBLE_PRECISION=OFF -DGENERATE_DEBUG_SYMBOLS=ON -DCROSS_PLATFORM_DETERMINISTIC=OFF -DCROSS_COMPILE_ARM=OFF -DBUILD_SHARED_LIBS=OFF \ 
    -DINTERPROCEDURAL_OPTIMIZATION=ON -DFLOATING_POINT_EXCEPTIONS_ENABLED=ON -DOBJECT_LAYER_BITS=16 -DENABLE_ALL_WARNINGS=ON -DTRACK_BROADPHASE_STATS=OFF \ 
    -DTRACK_NARROWPHASE_STATS=OFF -DCPP_RTTI_ENABLED=ON . && \
    cd Linux_Debug && \
    make -j $(nproc) && \
    #./UnitTests && \
    cmake --install .