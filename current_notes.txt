- test build with c++17 again now that dependencies are properly made
- THEN change to use c++20
- added assets from bamboo release file for testing - must make it seperate download in the future
- must convert glfw code to sdl2
- must figure out how to create editor executable seperate from user developer code

- editor/simulation/simulation_ui is where we call the sky texture
- asset_manager.h also is where DEFAULT_TEXTURE_CUBE_URL which has the tex and texc file calls
- config folder has a .yaml file that controls locations of the default world

- PROBLEM: cannot open default .world files made by bamboo due to namespaces being different
- FIX: figure out how 1 world is made, then create a function (or class) that constructs that default world. Just enough to get started
- Make it a function so that I can make new default worlds in case I need to make bigger changes


sudo docker build -t yurrgoht/testapp:1.0 .
cmake -G Ninja -S . -B build
cmake --build build --config Release

cd build/source
./Test

# Runtime library search paths (optional for dynamically loaded libraries, but not critical for static executables)
if(NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/libs)
    file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/libs)

    # Copy dependency libraries (optional)
    add_custom_command(TARGET ${TARGET_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E echo "Copying shared libraries..."
        COMMAND ldd ${CMAKE_CURRENT_BINARY_DIR}/${TARGET_NAME} | cut -d' ' -f3 | xargs -I {} cp -v {} ${CMAKE_CURRENT_BINARY_DIR}/libs/
    )
endif()



CURRENT CMDLINE ERROR OUTPUT:

sudo ./Test
error: XDG_RUNTIME_DIR is invalid or not set in the environment.
[info] [pickPhysicalDevice] Device[0]: NVIDIA GeForce GTX 1070 Ti DISCRETE_GPU 1.3.242
[info] [pickPhysicalDevice] Device[1]: llvmpipe (LLVM 15.0.6, 256 bits) CPU 1.3.230
[info] [pickPhysicalDevice] Selected device: NVIDIA GeForce GTX 1070 Ti DISCRETE_GPU 1.3.242
Present mode: V-Sync
WorldManager initializing
loadWorld - loading asset/engine/world/basic.world
PROBLEM TEXTURE: ./asset/engine/world/basic.world
Json
World initializing
terminate called after throwing an instance of 'cereal::Exception'
  what():  JSON Parsing failed - provided NVP (asset_ref) not found
Aborted
