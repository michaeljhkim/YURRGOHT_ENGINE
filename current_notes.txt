- test build with c++17 again now that dependencies are properly made
- THEN change to use c++20
- added assets from bamboo release file for testing - must make it seperate download in the future
- must convert glfw code to sdl2
- must figure out how to create editor executable seperate from user developer code

- The Test executable technically works, but it seg faults right away
- first guess is environment differences
- create new project to fix rttr, then compile, then use statically


- Keep Local dependencies:
- imgui
- tinygltf


# Vulkan KTX2 dependency
RUN wget https://github.com/KhronosGroup/KTX-Software/releases/download/v4.3.2/KTX-Software-4.3.2-Linux-x86_64.rpm && \
    dnf localinstall --nobest -y KTX-Software-4.3.2-Linux-x86_64.rpm


#Assuming we will be able to use the docker image to find this stuff
find_package(Vulkan REQUIRED)
find_package(SDL2 REQUIRED)
find_package(glfw3 REQUIRED)
find_package(rttr REQUIRED)
find_package(jolt REQUIRED)
find_package(spdlog REQUIRED)
find_package(yaml-cpp REQUIRED)


sudo docker build -t yurrgoht/testapp:1.0 .
cmake -G Ninja -S . -B build
cmake --build build --config Release


cd build/template/common/
./Test




# Runtime library search paths (optional for dynamically loaded libraries, but not critical for static executables)
if(NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/libs)
    file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/libs)

    # Copy dependency libraries (optional)
    add_custom_command(TARGET ${TARGET_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E echo "Copying shared libraries..."
        COMMAND ldd ${CMAKE_CURRENT_BINARY_DIR}/${TARGET_NAME} | cut -d' ' -f3 | xargs -I {} cp -v {} ${CMAKE_CURRENT_BINARY_DIR}/libs/
    )
endif()


if (NOT TARGET rttr_core_lib)
    option(BUILD_RTTR_DYNAMIC "" OFF)
    option(BUILD_UNIT_TESTS "" OFF)
    option(BUILD_STATIC "" ON)
    #option(BUILD_WITH_STATIC_RUNTIME_LIBS "" ON)
    option(BUILD_EXAMPLES "" OFF)
    option(BUILD_DOCUMENTATION "" OFF)
    option(BUILD_INSTALLER OFF)
    option(BUILD_PACKAGE OFF)
    add_subdirectory(rttr)
    set_target_properties(rttr_core_lib PROPERTIES FOLDER ${external_folder}/rttr)
endif()

# rttr dependency - static
# manually had to set install location and then copy header files b/c rttr does not do so for static for some reason
RUN git clone https://github.com/rttrorg/rttr.git && \
    cd rttr && mkdir build && cd build && \
    cmake .. -G Ninja -B . -DCMAKE_CXX_COMPILER=clang -DCMAKE_CXX_STANDARD=17 -DBUILD_RTTR_DYNAMIC=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_STATIC=ON \
    -DBUILD_WITH_STATIC_RUNTIME_LIBS=ON -DBUILD_EXAMPLES=OFF -DBUILD_DOCUMENTATION=OFF -DBUILD_INSTALLER=ON -DBUILD_PACKAGE=ON \
    -DCMAKE_INSTALL_PREFIX=/usr/local && \
    cmake --build . && \
    cmake --install . && \
    cd ../src/rttr && \
    find . -name "*.h" -exec install -D {} /usr/local/include/rttr/{} \;